// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MSG_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_T_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_T_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_2eproto() {
  protobuf_AddDesc_msg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_descriptor_ = file->message_type(0);
  static const int MSG_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, bool_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, bool_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, bool_repeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, int_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, int_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, int_repeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, int64_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, int64_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, int64_repeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, string_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, string_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, string_repeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, t_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, t_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, t_repeated_),
  };
  MSG_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_descriptor_,
      MSG::default_instance_,
      MSG_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG));
  MSG_T_descriptor_ = MSG_descriptor_->nested_type(0);
  static const int MSG_T_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, bool_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, bool_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, bool_repeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, int_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, int_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, int_repeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, int64_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, int64_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, int64_repeated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, string_optional_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, string_required_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, string_repeated_),
  };
  MSG_T_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_T_descriptor_,
      MSG_T::default_instance_,
      MSG_T_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_T, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_T));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_descriptor_, &MSG::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_T_descriptor_, &MSG_T::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_2eproto() {
  delete MSG::default_instance_;
  delete MSG_reflection_;
  delete MSG_T::default_instance_;
  delete MSG_T_reflection_;
}

void protobuf_AddDesc_msg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tmsg.proto\"\223\005\n\003MSG\022\025\n\rbool_optional\030\001 \001"
    "(\010\022\025\n\rbool_required\030\002 \002(\010\022\025\n\rbool_repeat"
    "ed\030\003 \003(\010\022\024\n\014int_optional\030\004 \001(\005\022\024\n\014int_re"
    "quired\030\005 \002(\005\022\024\n\014int_repeated\030\006 \003(\005\022\026\n\016in"
    "t64_optional\030\007 \001(\003\022\026\n\016int64_required\030\010 \002"
    "(\003\022\026\n\016int64_repeated\030\t \003(\003\022\027\n\017string_opt"
    "ional\030\n \001(\t\022\027\n\017string_required\030\013 \002(\t\022\027\n\017"
    "string_repeated\030\014 \003(\t\022\032\n\nT_optional\030\r \001("
    "\0132\006.MSG.T\022\032\n\nT_required\030\016 \002(\0132\006.MSG.T\022\032\n"
    "\nT_repeated\030\017 \003(\0132\006.MSG.T\032\235\002\n\001T\022\025\n\rbool_"
    "optional\030\001 \001(\010\022\025\n\rbool_required\030\002 \002(\010\022\025\n"
    "\rbool_repeated\030\003 \003(\010\022\024\n\014int_optional\030\004 \001"
    "(\005\022\024\n\014int_required\030\005 \002(\005\022\024\n\014int_repeated"
    "\030\006 \003(\005\022\026\n\016int64_optional\030\007 \001(\003\022\026\n\016int64_"
    "required\030\010 \002(\003\022\026\n\016int64_repeated\030\t \003(\003\022\027"
    "\n\017string_optional\030\n \001(\t\022\027\n\017string_requir"
    "ed\030\013 \002(\t\022\027\n\017string_repeated\030\014 \003(\t", 673);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg.proto", &protobuf_RegisterTypes);
  MSG::default_instance_ = new MSG();
  MSG_T::default_instance_ = new MSG_T();
  MSG::default_instance_->InitAsDefaultInstance();
  MSG_T::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_2eproto {
  StaticDescriptorInitializer_msg_2eproto() {
    protobuf_AddDesc_msg_2eproto();
  }
} static_descriptor_initializer_msg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MSG_T::kBoolOptionalFieldNumber;
const int MSG_T::kBoolRequiredFieldNumber;
const int MSG_T::kBoolRepeatedFieldNumber;
const int MSG_T::kIntOptionalFieldNumber;
const int MSG_T::kIntRequiredFieldNumber;
const int MSG_T::kIntRepeatedFieldNumber;
const int MSG_T::kInt64OptionalFieldNumber;
const int MSG_T::kInt64RequiredFieldNumber;
const int MSG_T::kInt64RepeatedFieldNumber;
const int MSG_T::kStringOptionalFieldNumber;
const int MSG_T::kStringRequiredFieldNumber;
const int MSG_T::kStringRepeatedFieldNumber;
#endif  // !_MSC_VER

MSG_T::MSG_T()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG.T)
}

void MSG_T::InitAsDefaultInstance() {
}

MSG_T::MSG_T(const MSG_T& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG.T)
}

void MSG_T::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bool_optional_ = false;
  bool_required_ = false;
  int_optional_ = 0;
  int_required_ = 0;
  int64_optional_ = GOOGLE_LONGLONG(0);
  int64_required_ = GOOGLE_LONGLONG(0);
  string_optional_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_required_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_T::~MSG_T() {
  // @@protoc_insertion_point(destructor:MSG.T)
  SharedDtor();
}

void MSG_T::SharedDtor() {
  if (string_optional_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_optional_;
  }
  if (string_required_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_required_;
  }
  if (this != default_instance_) {
  }
}

void MSG_T::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_T::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_T_descriptor_;
}

const MSG_T& MSG_T::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2eproto();
  return *default_instance_;
}

MSG_T* MSG_T::default_instance_ = NULL;

MSG_T* MSG_T::New() const {
  return new MSG_T;
}

void MSG_T::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG_T*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 219) {
    ZR_(bool_optional_, int_optional_);
    ZR_(int64_optional_, int64_required_);
    int_required_ = 0;
  }
  if (_has_bits_[8 / 32] & 1536) {
    if (has_string_optional()) {
      if (string_optional_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        string_optional_->clear();
      }
    }
    if (has_string_required()) {
      if (string_required_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        string_required_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  bool_repeated_.Clear();
  int_repeated_.Clear();
  int64_repeated_.Clear();
  string_repeated_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_T::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG.T)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bool_optional = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_optional_)));
          set_has_bool_optional();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bool_required;
        break;
      }

      // required bool bool_required = 2;
      case 2: {
        if (tag == 16) {
         parse_bool_required:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_required_)));
          set_has_bool_required();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bool_repeated;
        break;
      }

      // repeated bool bool_repeated = 3;
      case 3: {
        if (tag == 24) {
         parse_bool_repeated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 24, input, this->mutable_bool_repeated())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bool_repeated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bool_repeated;
        if (input->ExpectTag(32)) goto parse_int_optional;
        break;
      }

      // optional int32 int_optional = 4;
      case 4: {
        if (tag == 32) {
         parse_int_optional:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_optional_)));
          set_has_int_optional();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_int_required;
        break;
      }

      // required int32 int_required = 5;
      case 5: {
        if (tag == 40) {
         parse_int_required:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_required_)));
          set_has_int_required();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_int_repeated;
        break;
      }

      // repeated int32 int_repeated = 6;
      case 6: {
        if (tag == 48) {
         parse_int_repeated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_int_repeated())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int_repeated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_int_repeated;
        if (input->ExpectTag(56)) goto parse_int64_optional;
        break;
      }

      // optional int64 int64_optional = 7;
      case 7: {
        if (tag == 56) {
         parse_int64_optional:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_optional_)));
          set_has_int64_optional();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_int64_required;
        break;
      }

      // required int64 int64_required = 8;
      case 8: {
        if (tag == 64) {
         parse_int64_required:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_required_)));
          set_has_int64_required();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_int64_repeated;
        break;
      }

      // repeated int64 int64_repeated = 9;
      case 9: {
        if (tag == 72) {
         parse_int64_repeated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 72, input, this->mutable_int64_repeated())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64_repeated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_int64_repeated;
        if (input->ExpectTag(82)) goto parse_string_optional;
        break;
      }

      // optional string string_optional = 10;
      case 10: {
        if (tag == 82) {
         parse_string_optional:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_optional()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_optional().data(), this->string_optional().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_optional");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_string_required;
        break;
      }

      // required string string_required = 11;
      case 11: {
        if (tag == 90) {
         parse_string_required:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_required()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_required().data(), this->string_required().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_required");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_string_repeated;
        break;
      }

      // repeated string string_repeated = 12;
      case 12: {
        if (tag == 98) {
         parse_string_repeated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_string_repeated()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_repeated(this->string_repeated_size() - 1).data(),
            this->string_repeated(this->string_repeated_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_repeated");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_string_repeated;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG.T)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG.T)
  return false;
#undef DO_
}

void MSG_T::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG.T)
  // optional bool bool_optional = 1;
  if (has_bool_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bool_optional(), output);
  }

  // required bool bool_required = 2;
  if (has_bool_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bool_required(), output);
  }

  // repeated bool bool_repeated = 3;
  for (int i = 0; i < this->bool_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      3, this->bool_repeated(i), output);
  }

  // optional int32 int_optional = 4;
  if (has_int_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->int_optional(), output);
  }

  // required int32 int_required = 5;
  if (has_int_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->int_required(), output);
  }

  // repeated int32 int_repeated = 6;
  for (int i = 0; i < this->int_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->int_repeated(i), output);
  }

  // optional int64 int64_optional = 7;
  if (has_int64_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->int64_optional(), output);
  }

  // required int64 int64_required = 8;
  if (has_int64_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->int64_required(), output);
  }

  // repeated int64 int64_repeated = 9;
  for (int i = 0; i < this->int64_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      9, this->int64_repeated(i), output);
  }

  // optional string string_optional = 10;
  if (has_string_optional()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_optional().data(), this->string_optional().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_optional");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->string_optional(), output);
  }

  // required string string_required = 11;
  if (has_string_required()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_required().data(), this->string_required().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_required");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->string_required(), output);
  }

  // repeated string string_repeated = 12;
  for (int i = 0; i < this->string_repeated_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->string_repeated(i).data(), this->string_repeated(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "string_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->string_repeated(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG.T)
}

::google::protobuf::uint8* MSG_T::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG.T)
  // optional bool bool_optional = 1;
  if (has_bool_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bool_optional(), target);
  }

  // required bool bool_required = 2;
  if (has_bool_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bool_required(), target);
  }

  // repeated bool bool_repeated = 3;
  for (int i = 0; i < this->bool_repeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(3, this->bool_repeated(i), target);
  }

  // optional int32 int_optional = 4;
  if (has_int_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->int_optional(), target);
  }

  // required int32 int_required = 5;
  if (has_int_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->int_required(), target);
  }

  // repeated int32 int_repeated = 6;
  for (int i = 0; i < this->int_repeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->int_repeated(i), target);
  }

  // optional int64 int64_optional = 7;
  if (has_int64_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->int64_optional(), target);
  }

  // required int64 int64_required = 8;
  if (has_int64_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->int64_required(), target);
  }

  // repeated int64 int64_repeated = 9;
  for (int i = 0; i < this->int64_repeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(9, this->int64_repeated(i), target);
  }

  // optional string string_optional = 10;
  if (has_string_optional()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_optional().data(), this->string_optional().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_optional");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->string_optional(), target);
  }

  // required string string_required = 11;
  if (has_string_required()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_required().data(), this->string_required().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_required");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->string_required(), target);
  }

  // repeated string string_repeated = 12;
  for (int i = 0; i < this->string_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_repeated(i).data(), this->string_repeated(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->string_repeated(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG.T)
  return target;
}

int MSG_T::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool bool_optional = 1;
    if (has_bool_optional()) {
      total_size += 1 + 1;
    }

    // required bool bool_required = 2;
    if (has_bool_required()) {
      total_size += 1 + 1;
    }

    // optional int32 int_optional = 4;
    if (has_int_optional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_optional());
    }

    // required int32 int_required = 5;
    if (has_int_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_required());
    }

    // optional int64 int64_optional = 7;
    if (has_int64_optional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_optional());
    }

    // required int64 int64_required = 8;
    if (has_int64_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_required());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional string string_optional = 10;
    if (has_string_optional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_optional());
    }

    // required string string_required = 11;
    if (has_string_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_required());
    }

  }
  // repeated bool bool_repeated = 3;
  {
    int data_size = 0;
    data_size = 1 * this->bool_repeated_size();
    total_size += 1 * this->bool_repeated_size() + data_size;
  }

  // repeated int32 int_repeated = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->int_repeated_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->int_repeated(i));
    }
    total_size += 1 * this->int_repeated_size() + data_size;
  }

  // repeated int64 int64_repeated = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->int64_repeated_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->int64_repeated(i));
    }
    total_size += 1 * this->int64_repeated_size() + data_size;
  }

  // repeated string string_repeated = 12;
  total_size += 1 * this->string_repeated_size();
  for (int i = 0; i < this->string_repeated_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->string_repeated(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_T::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_T* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_T*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_T::MergeFrom(const MSG_T& from) {
  GOOGLE_CHECK_NE(&from, this);
  bool_repeated_.MergeFrom(from.bool_repeated_);
  int_repeated_.MergeFrom(from.int_repeated_);
  int64_repeated_.MergeFrom(from.int64_repeated_);
  string_repeated_.MergeFrom(from.string_repeated_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bool_optional()) {
      set_bool_optional(from.bool_optional());
    }
    if (from.has_bool_required()) {
      set_bool_required(from.bool_required());
    }
    if (from.has_int_optional()) {
      set_int_optional(from.int_optional());
    }
    if (from.has_int_required()) {
      set_int_required(from.int_required());
    }
    if (from.has_int64_optional()) {
      set_int64_optional(from.int64_optional());
    }
    if (from.has_int64_required()) {
      set_int64_required(from.int64_required());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_string_optional()) {
      set_string_optional(from.string_optional());
    }
    if (from.has_string_required()) {
      set_string_required(from.string_required());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_T::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_T::CopyFrom(const MSG_T& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_T::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000492) != 0x00000492) return false;

  return true;
}

void MSG_T::Swap(MSG_T* other) {
  if (other != this) {
    std::swap(bool_optional_, other->bool_optional_);
    std::swap(bool_required_, other->bool_required_);
    bool_repeated_.Swap(&other->bool_repeated_);
    std::swap(int_optional_, other->int_optional_);
    std::swap(int_required_, other->int_required_);
    int_repeated_.Swap(&other->int_repeated_);
    std::swap(int64_optional_, other->int64_optional_);
    std::swap(int64_required_, other->int64_required_);
    int64_repeated_.Swap(&other->int64_repeated_);
    std::swap(string_optional_, other->string_optional_);
    std::swap(string_required_, other->string_required_);
    string_repeated_.Swap(&other->string_repeated_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_T::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_T_descriptor_;
  metadata.reflection = MSG_T_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG::kBoolOptionalFieldNumber;
const int MSG::kBoolRequiredFieldNumber;
const int MSG::kBoolRepeatedFieldNumber;
const int MSG::kIntOptionalFieldNumber;
const int MSG::kIntRequiredFieldNumber;
const int MSG::kIntRepeatedFieldNumber;
const int MSG::kInt64OptionalFieldNumber;
const int MSG::kInt64RequiredFieldNumber;
const int MSG::kInt64RepeatedFieldNumber;
const int MSG::kStringOptionalFieldNumber;
const int MSG::kStringRequiredFieldNumber;
const int MSG::kStringRepeatedFieldNumber;
const int MSG::kTOptionalFieldNumber;
const int MSG::kTRequiredFieldNumber;
const int MSG::kTRepeatedFieldNumber;
#endif  // !_MSC_VER

MSG::MSG()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MSG)
}

void MSG::InitAsDefaultInstance() {
  t_optional_ = const_cast< ::MSG_T*>(&::MSG_T::default_instance());
  t_required_ = const_cast< ::MSG_T*>(&::MSG_T::default_instance());
}

MSG::MSG(const MSG& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MSG)
}

void MSG::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bool_optional_ = false;
  bool_required_ = false;
  int_optional_ = 0;
  int_required_ = 0;
  int64_optional_ = GOOGLE_LONGLONG(0);
  int64_required_ = GOOGLE_LONGLONG(0);
  string_optional_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_required_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t_optional_ = NULL;
  t_required_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG::~MSG() {
  // @@protoc_insertion_point(destructor:MSG)
  SharedDtor();
}

void MSG::SharedDtor() {
  if (string_optional_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_optional_;
  }
  if (string_required_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete string_required_;
  }
  if (this != default_instance_) {
    delete t_optional_;
    delete t_required_;
  }
}

void MSG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_descriptor_;
}

const MSG& MSG::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_2eproto();
  return *default_instance_;
}

MSG* MSG::default_instance_ = NULL;

MSG* MSG::New() const {
  return new MSG;
}

void MSG::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MSG*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 219) {
    ZR_(bool_optional_, int_optional_);
    ZR_(int64_optional_, int64_required_);
    int_required_ = 0;
  }
  if (_has_bits_[8 / 32] & 13824) {
    if (has_string_optional()) {
      if (string_optional_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        string_optional_->clear();
      }
    }
    if (has_string_required()) {
      if (string_required_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        string_required_->clear();
      }
    }
    if (has_t_optional()) {
      if (t_optional_ != NULL) t_optional_->::MSG_T::Clear();
    }
    if (has_t_required()) {
      if (t_required_ != NULL) t_required_->::MSG_T::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  bool_repeated_.Clear();
  int_repeated_.Clear();
  int64_repeated_.Clear();
  string_repeated_.Clear();
  t_repeated_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MSG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bool_optional = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_optional_)));
          set_has_bool_optional();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bool_required;
        break;
      }

      // required bool bool_required = 2;
      case 2: {
        if (tag == 16) {
         parse_bool_required:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_required_)));
          set_has_bool_required();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bool_repeated;
        break;
      }

      // repeated bool bool_repeated = 3;
      case 3: {
        if (tag == 24) {
         parse_bool_repeated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 24, input, this->mutable_bool_repeated())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bool_repeated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bool_repeated;
        if (input->ExpectTag(32)) goto parse_int_optional;
        break;
      }

      // optional int32 int_optional = 4;
      case 4: {
        if (tag == 32) {
         parse_int_optional:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_optional_)));
          set_has_int_optional();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_int_required;
        break;
      }

      // required int32 int_required = 5;
      case 5: {
        if (tag == 40) {
         parse_int_required:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_required_)));
          set_has_int_required();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_int_repeated;
        break;
      }

      // repeated int32 int_repeated = 6;
      case 6: {
        if (tag == 48) {
         parse_int_repeated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_int_repeated())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int_repeated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_int_repeated;
        if (input->ExpectTag(56)) goto parse_int64_optional;
        break;
      }

      // optional int64 int64_optional = 7;
      case 7: {
        if (tag == 56) {
         parse_int64_optional:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_optional_)));
          set_has_int64_optional();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_int64_required;
        break;
      }

      // required int64 int64_required = 8;
      case 8: {
        if (tag == 64) {
         parse_int64_required:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_required_)));
          set_has_int64_required();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_int64_repeated;
        break;
      }

      // repeated int64 int64_repeated = 9;
      case 9: {
        if (tag == 72) {
         parse_int64_repeated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 72, input, this->mutable_int64_repeated())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64_repeated())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_int64_repeated;
        if (input->ExpectTag(82)) goto parse_string_optional;
        break;
      }

      // optional string string_optional = 10;
      case 10: {
        if (tag == 82) {
         parse_string_optional:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_optional()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_optional().data(), this->string_optional().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_optional");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_string_required;
        break;
      }

      // required string string_required = 11;
      case 11: {
        if (tag == 90) {
         parse_string_required:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_required()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_required().data(), this->string_required().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_required");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_string_repeated;
        break;
      }

      // repeated string string_repeated = 12;
      case 12: {
        if (tag == 98) {
         parse_string_repeated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_string_repeated()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_repeated(this->string_repeated_size() - 1).data(),
            this->string_repeated(this->string_repeated_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "string_repeated");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_string_repeated;
        if (input->ExpectTag(106)) goto parse_T_optional;
        break;
      }

      // optional .MSG.T T_optional = 13;
      case 13: {
        if (tag == 106) {
         parse_T_optional:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t_optional()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_T_required;
        break;
      }

      // required .MSG.T T_required = 14;
      case 14: {
        if (tag == 114) {
         parse_T_required:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t_required()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_T_repeated;
        break;
      }

      // repeated .MSG.T T_repeated = 15;
      case 15: {
        if (tag == 122) {
         parse_T_repeated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_t_repeated()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_T_repeated;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MSG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MSG)
  return false;
#undef DO_
}

void MSG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MSG)
  // optional bool bool_optional = 1;
  if (has_bool_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bool_optional(), output);
  }

  // required bool bool_required = 2;
  if (has_bool_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bool_required(), output);
  }

  // repeated bool bool_repeated = 3;
  for (int i = 0; i < this->bool_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      3, this->bool_repeated(i), output);
  }

  // optional int32 int_optional = 4;
  if (has_int_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->int_optional(), output);
  }

  // required int32 int_required = 5;
  if (has_int_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->int_required(), output);
  }

  // repeated int32 int_repeated = 6;
  for (int i = 0; i < this->int_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->int_repeated(i), output);
  }

  // optional int64 int64_optional = 7;
  if (has_int64_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->int64_optional(), output);
  }

  // required int64 int64_required = 8;
  if (has_int64_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->int64_required(), output);
  }

  // repeated int64 int64_repeated = 9;
  for (int i = 0; i < this->int64_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      9, this->int64_repeated(i), output);
  }

  // optional string string_optional = 10;
  if (has_string_optional()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_optional().data(), this->string_optional().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_optional");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->string_optional(), output);
  }

  // required string string_required = 11;
  if (has_string_required()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_required().data(), this->string_required().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_required");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->string_required(), output);
  }

  // repeated string string_repeated = 12;
  for (int i = 0; i < this->string_repeated_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->string_repeated(i).data(), this->string_repeated(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "string_repeated");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->string_repeated(i), output);
  }

  // optional .MSG.T T_optional = 13;
  if (has_t_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->t_optional(), output);
  }

  // required .MSG.T T_required = 14;
  if (has_t_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->t_required(), output);
  }

  // repeated .MSG.T T_repeated = 15;
  for (int i = 0; i < this->t_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->t_repeated(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MSG)
}

::google::protobuf::uint8* MSG::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MSG)
  // optional bool bool_optional = 1;
  if (has_bool_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bool_optional(), target);
  }

  // required bool bool_required = 2;
  if (has_bool_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bool_required(), target);
  }

  // repeated bool bool_repeated = 3;
  for (int i = 0; i < this->bool_repeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(3, this->bool_repeated(i), target);
  }

  // optional int32 int_optional = 4;
  if (has_int_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->int_optional(), target);
  }

  // required int32 int_required = 5;
  if (has_int_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->int_required(), target);
  }

  // repeated int32 int_repeated = 6;
  for (int i = 0; i < this->int_repeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->int_repeated(i), target);
  }

  // optional int64 int64_optional = 7;
  if (has_int64_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->int64_optional(), target);
  }

  // required int64 int64_required = 8;
  if (has_int64_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->int64_required(), target);
  }

  // repeated int64 int64_repeated = 9;
  for (int i = 0; i < this->int64_repeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(9, this->int64_repeated(i), target);
  }

  // optional string string_optional = 10;
  if (has_string_optional()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_optional().data(), this->string_optional().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_optional");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->string_optional(), target);
  }

  // required string string_required = 11;
  if (has_string_required()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_required().data(), this->string_required().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_required");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->string_required(), target);
  }

  // repeated string string_repeated = 12;
  for (int i = 0; i < this->string_repeated_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_repeated(i).data(), this->string_repeated(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "string_repeated");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->string_repeated(i), target);
  }

  // optional .MSG.T T_optional = 13;
  if (has_t_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->t_optional(), target);
  }

  // required .MSG.T T_required = 14;
  if (has_t_required()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->t_required(), target);
  }

  // repeated .MSG.T T_repeated = 15;
  for (int i = 0; i < this->t_repeated_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->t_repeated(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MSG)
  return target;
}

int MSG::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool bool_optional = 1;
    if (has_bool_optional()) {
      total_size += 1 + 1;
    }

    // required bool bool_required = 2;
    if (has_bool_required()) {
      total_size += 1 + 1;
    }

    // optional int32 int_optional = 4;
    if (has_int_optional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_optional());
    }

    // required int32 int_required = 5;
    if (has_int_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_required());
    }

    // optional int64 int64_optional = 7;
    if (has_int64_optional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_optional());
    }

    // required int64 int64_required = 8;
    if (has_int64_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_required());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional string string_optional = 10;
    if (has_string_optional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_optional());
    }

    // required string string_required = 11;
    if (has_string_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_required());
    }

    // optional .MSG.T T_optional = 13;
    if (has_t_optional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->t_optional());
    }

    // required .MSG.T T_required = 14;
    if (has_t_required()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->t_required());
    }

  }
  // repeated bool bool_repeated = 3;
  {
    int data_size = 0;
    data_size = 1 * this->bool_repeated_size();
    total_size += 1 * this->bool_repeated_size() + data_size;
  }

  // repeated int32 int_repeated = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->int_repeated_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->int_repeated(i));
    }
    total_size += 1 * this->int_repeated_size() + data_size;
  }

  // repeated int64 int64_repeated = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->int64_repeated_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->int64_repeated(i));
    }
    total_size += 1 * this->int64_repeated_size() + data_size;
  }

  // repeated string string_repeated = 12;
  total_size += 1 * this->string_repeated_size();
  for (int i = 0; i < this->string_repeated_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->string_repeated(i));
  }

  // repeated .MSG.T T_repeated = 15;
  total_size += 1 * this->t_repeated_size();
  for (int i = 0; i < this->t_repeated_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->t_repeated(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG::MergeFrom(const MSG& from) {
  GOOGLE_CHECK_NE(&from, this);
  bool_repeated_.MergeFrom(from.bool_repeated_);
  int_repeated_.MergeFrom(from.int_repeated_);
  int64_repeated_.MergeFrom(from.int64_repeated_);
  string_repeated_.MergeFrom(from.string_repeated_);
  t_repeated_.MergeFrom(from.t_repeated_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bool_optional()) {
      set_bool_optional(from.bool_optional());
    }
    if (from.has_bool_required()) {
      set_bool_required(from.bool_required());
    }
    if (from.has_int_optional()) {
      set_int_optional(from.int_optional());
    }
    if (from.has_int_required()) {
      set_int_required(from.int_required());
    }
    if (from.has_int64_optional()) {
      set_int64_optional(from.int64_optional());
    }
    if (from.has_int64_required()) {
      set_int64_required(from.int64_required());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_string_optional()) {
      set_string_optional(from.string_optional());
    }
    if (from.has_string_required()) {
      set_string_required(from.string_required());
    }
    if (from.has_t_optional()) {
      mutable_t_optional()->::MSG_T::MergeFrom(from.t_optional());
    }
    if (from.has_t_required()) {
      mutable_t_required()->::MSG_T::MergeFrom(from.t_required());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG::CopyFrom(const MSG& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG::IsInitialized() const {
  if ((_has_bits_[0] & 0x00002492) != 0x00002492) return false;

  if (has_t_optional()) {
    if (!this->t_optional().IsInitialized()) return false;
  }
  if (has_t_required()) {
    if (!this->t_required().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->t_repeated())) return false;
  return true;
}

void MSG::Swap(MSG* other) {
  if (other != this) {
    std::swap(bool_optional_, other->bool_optional_);
    std::swap(bool_required_, other->bool_required_);
    bool_repeated_.Swap(&other->bool_repeated_);
    std::swap(int_optional_, other->int_optional_);
    std::swap(int_required_, other->int_required_);
    int_repeated_.Swap(&other->int_repeated_);
    std::swap(int64_optional_, other->int64_optional_);
    std::swap(int64_required_, other->int64_required_);
    int64_repeated_.Swap(&other->int64_repeated_);
    std::swap(string_optional_, other->string_optional_);
    std::swap(string_required_, other->string_required_);
    string_repeated_.Swap(&other->string_repeated_);
    std::swap(t_optional_, other->t_optional_);
    std::swap(t_required_, other->t_required_);
    t_repeated_.Swap(&other->t_repeated_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_descriptor_;
  metadata.reflection = MSG_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
