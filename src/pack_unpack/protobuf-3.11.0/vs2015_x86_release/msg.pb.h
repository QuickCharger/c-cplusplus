// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_msg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_2eproto;
class MSG;
class MSGDefaultTypeInternal;
extern MSGDefaultTypeInternal _MSG_default_instance_;
class MSG_T;
class MSG_TDefaultTypeInternal;
extern MSG_TDefaultTypeInternal _MSG_T_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::MSG* Arena::CreateMaybeMessage<::MSG>(Arena*);
template<> ::MSG_T* Arena::CreateMaybeMessage<::MSG_T>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class MSG_T :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MSG.T) */ {
 public:
  MSG_T();
  virtual ~MSG_T();

  MSG_T(const MSG_T& from);
  MSG_T(MSG_T&& from) noexcept
    : MSG_T() {
    *this = ::std::move(from);
  }

  inline MSG_T& operator=(const MSG_T& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_T& operator=(MSG_T&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_T& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_T* internal_default_instance() {
    return reinterpret_cast<const MSG_T*>(
               &_MSG_T_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MSG_T& a, MSG_T& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_T* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_T* New() const final {
    return CreateMaybeMessage<MSG_T>(nullptr);
  }

  MSG_T* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_T>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_T& from);
  void MergeFrom(const MSG_T& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_T* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MSG.T";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_2eproto);
    return ::descriptor_table_msg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoolRepeatedFieldNumber = 3,
    kIntRepeatedFieldNumber = 6,
    kInt64RepeatedFieldNumber = 9,
    kStringRepeatedFieldNumber = 12,
    kStringOptionalFieldNumber = 10,
    kStringRequiredFieldNumber = 11,
    kBoolOptionalFieldNumber = 1,
    kBoolRequiredFieldNumber = 2,
    kIntOptionalFieldNumber = 4,
    kInt64OptionalFieldNumber = 7,
    kInt64RequiredFieldNumber = 8,
    kIntRequiredFieldNumber = 5,
  };
  // repeated bool bool_repeated = 3;
  int bool_repeated_size() const;
  private:
  int _internal_bool_repeated_size() const;
  public:
  void clear_bool_repeated();
  private:
  bool _internal_bool_repeated(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_bool_repeated() const;
  void _internal_add_bool_repeated(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_bool_repeated();
  public:
  bool bool_repeated(int index) const;
  void set_bool_repeated(int index, bool value);
  void add_bool_repeated(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      bool_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_bool_repeated();

  // repeated int32 int_repeated = 6;
  int int_repeated_size() const;
  private:
  int _internal_int_repeated_size() const;
  public:
  void clear_int_repeated();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_repeated(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_int_repeated() const;
  void _internal_add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_int_repeated();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 int_repeated(int index) const;
  void set_int_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      int_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_int_repeated();

  // repeated int64 int64_repeated = 9;
  int int64_repeated_size() const;
  private:
  int _internal_int64_repeated_size() const;
  public:
  void clear_int64_repeated();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64_repeated(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_int64_repeated() const;
  void _internal_add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_int64_repeated();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 int64_repeated(int index) const;
  void set_int64_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      int64_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_int64_repeated();

  // repeated string string_repeated = 12;
  int string_repeated_size() const;
  private:
  int _internal_string_repeated_size() const;
  public:
  void clear_string_repeated();
  const std::string& string_repeated(int index) const;
  std::string* mutable_string_repeated(int index);
  void set_string_repeated(int index, const std::string& value);
  void set_string_repeated(int index, std::string&& value);
  void set_string_repeated(int index, const char* value);
  void set_string_repeated(int index, const char* value, size_t size);
  std::string* add_string_repeated();
  void add_string_repeated(const std::string& value);
  void add_string_repeated(std::string&& value);
  void add_string_repeated(const char* value);
  void add_string_repeated(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& string_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_string_repeated();
  private:
  const std::string& _internal_string_repeated(int index) const;
  std::string* _internal_add_string_repeated();
  public:

  // string string_optional = 10;
  void clear_string_optional();
  const std::string& string_optional() const;
  void set_string_optional(const std::string& value);
  void set_string_optional(std::string&& value);
  void set_string_optional(const char* value);
  void set_string_optional(const char* value, size_t size);
  std::string* mutable_string_optional();
  std::string* release_string_optional();
  void set_allocated_string_optional(std::string* string_optional);
  private:
  const std::string& _internal_string_optional() const;
  void _internal_set_string_optional(const std::string& value);
  std::string* _internal_mutable_string_optional();
  public:

  // string string_required = 11;
  void clear_string_required();
  const std::string& string_required() const;
  void set_string_required(const std::string& value);
  void set_string_required(std::string&& value);
  void set_string_required(const char* value);
  void set_string_required(const char* value, size_t size);
  std::string* mutable_string_required();
  std::string* release_string_required();
  void set_allocated_string_required(std::string* string_required);
  private:
  const std::string& _internal_string_required() const;
  void _internal_set_string_required(const std::string& value);
  std::string* _internal_mutable_string_required();
  public:

  // bool bool_optional = 1;
  void clear_bool_optional();
  bool bool_optional() const;
  void set_bool_optional(bool value);
  private:
  bool _internal_bool_optional() const;
  void _internal_set_bool_optional(bool value);
  public:

  // bool bool_required = 2;
  void clear_bool_required();
  bool bool_required() const;
  void set_bool_required(bool value);
  private:
  bool _internal_bool_required() const;
  void _internal_set_bool_required(bool value);
  public:

  // int32 int_optional = 4;
  void clear_int_optional();
  ::PROTOBUF_NAMESPACE_ID::int32 int_optional() const;
  void set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_optional() const;
  void _internal_set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 int64_optional = 7;
  void clear_int64_optional();
  ::PROTOBUF_NAMESPACE_ID::int64 int64_optional() const;
  void set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64_optional() const;
  void _internal_set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64_required = 8;
  void clear_int64_required();
  ::PROTOBUF_NAMESPACE_ID::int64 int64_required() const;
  void set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64_required() const;
  void _internal_set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 int_required = 5;
  void clear_int_required();
  ::PROTOBUF_NAMESPACE_ID::int32 int_required() const;
  void set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_required() const;
  void _internal_set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MSG.T)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > bool_repeated_;
  mutable std::atomic<int> _bool_repeated_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > int_repeated_;
  mutable std::atomic<int> _int_repeated_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > int64_repeated_;
  mutable std::atomic<int> _int64_repeated_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> string_repeated_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_optional_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_required_;
  bool bool_optional_;
  bool bool_required_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_optional_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_optional_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_required_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_required_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_2eproto;
};
// -------------------------------------------------------------------

class MSG :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MSG) */ {
 public:
  MSG();
  virtual ~MSG();

  MSG(const MSG& from);
  MSG(MSG&& from) noexcept
    : MSG() {
    *this = ::std::move(from);
  }

  inline MSG& operator=(const MSG& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG& operator=(MSG&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG* internal_default_instance() {
    return reinterpret_cast<const MSG*>(
               &_MSG_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MSG& a, MSG& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG* New() const final {
    return CreateMaybeMessage<MSG>(nullptr);
  }

  MSG* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG& from);
  void MergeFrom(const MSG& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MSG";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_msg_2eproto);
    return ::descriptor_table_msg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MSG_T T;

  // accessors -------------------------------------------------------

  enum : int {
    kBoolRepeatedFieldNumber = 3,
    kIntRepeatedFieldNumber = 6,
    kInt64RepeatedFieldNumber = 9,
    kStringRepeatedFieldNumber = 12,
    kTRepeatedFieldNumber = 15,
    kStringOptionalFieldNumber = 10,
    kStringRequiredFieldNumber = 11,
    kTOptionalFieldNumber = 13,
    kTRequiredFieldNumber = 14,
    kBoolOptionalFieldNumber = 1,
    kBoolRequiredFieldNumber = 2,
    kIntOptionalFieldNumber = 4,
    kInt64OptionalFieldNumber = 7,
    kInt64RequiredFieldNumber = 8,
    kIntRequiredFieldNumber = 5,
  };
  // repeated bool bool_repeated = 3;
  int bool_repeated_size() const;
  private:
  int _internal_bool_repeated_size() const;
  public:
  void clear_bool_repeated();
  private:
  bool _internal_bool_repeated(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_bool_repeated() const;
  void _internal_add_bool_repeated(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_bool_repeated();
  public:
  bool bool_repeated(int index) const;
  void set_bool_repeated(int index, bool value);
  void add_bool_repeated(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      bool_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_bool_repeated();

  // repeated int32 int_repeated = 6;
  int int_repeated_size() const;
  private:
  int _internal_int_repeated_size() const;
  public:
  void clear_int_repeated();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_repeated(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_int_repeated() const;
  void _internal_add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_int_repeated();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 int_repeated(int index) const;
  void set_int_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      int_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_int_repeated();

  // repeated int64 int64_repeated = 9;
  int int64_repeated_size() const;
  private:
  int _internal_int64_repeated_size() const;
  public:
  void clear_int64_repeated();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64_repeated(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_int64_repeated() const;
  void _internal_add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_int64_repeated();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 int64_repeated(int index) const;
  void set_int64_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      int64_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_int64_repeated();

  // repeated string string_repeated = 12;
  int string_repeated_size() const;
  private:
  int _internal_string_repeated_size() const;
  public:
  void clear_string_repeated();
  const std::string& string_repeated(int index) const;
  std::string* mutable_string_repeated(int index);
  void set_string_repeated(int index, const std::string& value);
  void set_string_repeated(int index, std::string&& value);
  void set_string_repeated(int index, const char* value);
  void set_string_repeated(int index, const char* value, size_t size);
  std::string* add_string_repeated();
  void add_string_repeated(const std::string& value);
  void add_string_repeated(std::string&& value);
  void add_string_repeated(const char* value);
  void add_string_repeated(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& string_repeated() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_string_repeated();
  private:
  const std::string& _internal_string_repeated(int index) const;
  std::string* _internal_add_string_repeated();
  public:

  // repeated .MSG.T T_repeated = 15;
  int t_repeated_size() const;
  private:
  int _internal_t_repeated_size() const;
  public:
  void clear_t_repeated();
  ::MSG_T* mutable_t_repeated(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MSG_T >*
      mutable_t_repeated();
  private:
  const ::MSG_T& _internal_t_repeated(int index) const;
  ::MSG_T* _internal_add_t_repeated();
  public:
  const ::MSG_T& t_repeated(int index) const;
  ::MSG_T* add_t_repeated();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MSG_T >&
      t_repeated() const;

  // string string_optional = 10;
  void clear_string_optional();
  const std::string& string_optional() const;
  void set_string_optional(const std::string& value);
  void set_string_optional(std::string&& value);
  void set_string_optional(const char* value);
  void set_string_optional(const char* value, size_t size);
  std::string* mutable_string_optional();
  std::string* release_string_optional();
  void set_allocated_string_optional(std::string* string_optional);
  private:
  const std::string& _internal_string_optional() const;
  void _internal_set_string_optional(const std::string& value);
  std::string* _internal_mutable_string_optional();
  public:

  // string string_required = 11;
  void clear_string_required();
  const std::string& string_required() const;
  void set_string_required(const std::string& value);
  void set_string_required(std::string&& value);
  void set_string_required(const char* value);
  void set_string_required(const char* value, size_t size);
  std::string* mutable_string_required();
  std::string* release_string_required();
  void set_allocated_string_required(std::string* string_required);
  private:
  const std::string& _internal_string_required() const;
  void _internal_set_string_required(const std::string& value);
  std::string* _internal_mutable_string_required();
  public:

  // .MSG.T T_optional = 13;
  bool has_t_optional() const;
  private:
  bool _internal_has_t_optional() const;
  public:
  void clear_t_optional();
  const ::MSG_T& t_optional() const;
  ::MSG_T* release_t_optional();
  ::MSG_T* mutable_t_optional();
  void set_allocated_t_optional(::MSG_T* t_optional);
  private:
  const ::MSG_T& _internal_t_optional() const;
  ::MSG_T* _internal_mutable_t_optional();
  public:

  // .MSG.T T_required = 14;
  bool has_t_required() const;
  private:
  bool _internal_has_t_required() const;
  public:
  void clear_t_required();
  const ::MSG_T& t_required() const;
  ::MSG_T* release_t_required();
  ::MSG_T* mutable_t_required();
  void set_allocated_t_required(::MSG_T* t_required);
  private:
  const ::MSG_T& _internal_t_required() const;
  ::MSG_T* _internal_mutable_t_required();
  public:

  // bool bool_optional = 1;
  void clear_bool_optional();
  bool bool_optional() const;
  void set_bool_optional(bool value);
  private:
  bool _internal_bool_optional() const;
  void _internal_set_bool_optional(bool value);
  public:

  // bool bool_required = 2;
  void clear_bool_required();
  bool bool_required() const;
  void set_bool_required(bool value);
  private:
  bool _internal_bool_required() const;
  void _internal_set_bool_required(bool value);
  public:

  // int32 int_optional = 4;
  void clear_int_optional();
  ::PROTOBUF_NAMESPACE_ID::int32 int_optional() const;
  void set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_optional() const;
  void _internal_set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 int64_optional = 7;
  void clear_int64_optional();
  ::PROTOBUF_NAMESPACE_ID::int64 int64_optional() const;
  void set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64_optional() const;
  void _internal_set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 int64_required = 8;
  void clear_int64_required();
  ::PROTOBUF_NAMESPACE_ID::int64 int64_required() const;
  void set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64_required() const;
  void _internal_set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 int_required = 5;
  void clear_int_required();
  ::PROTOBUF_NAMESPACE_ID::int32 int_required() const;
  void set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_required() const;
  void _internal_set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MSG)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > bool_repeated_;
  mutable std::atomic<int> _bool_repeated_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > int_repeated_;
  mutable std::atomic<int> _int_repeated_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > int64_repeated_;
  mutable std::atomic<int> _int64_repeated_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> string_repeated_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MSG_T > t_repeated_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_optional_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_required_;
  ::MSG_T* t_optional_;
  ::MSG_T* t_required_;
  bool bool_optional_;
  bool bool_required_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_optional_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_optional_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_required_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_required_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_msg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MSG_T

// bool bool_optional = 1;
inline void MSG_T::clear_bool_optional() {
  bool_optional_ = false;
}
inline bool MSG_T::_internal_bool_optional() const {
  return bool_optional_;
}
inline bool MSG_T::bool_optional() const {
  // @@protoc_insertion_point(field_get:MSG.T.bool_optional)
  return _internal_bool_optional();
}
inline void MSG_T::_internal_set_bool_optional(bool value) {
  
  bool_optional_ = value;
}
inline void MSG_T::set_bool_optional(bool value) {
  _internal_set_bool_optional(value);
  // @@protoc_insertion_point(field_set:MSG.T.bool_optional)
}

// bool bool_required = 2;
inline void MSG_T::clear_bool_required() {
  bool_required_ = false;
}
inline bool MSG_T::_internal_bool_required() const {
  return bool_required_;
}
inline bool MSG_T::bool_required() const {
  // @@protoc_insertion_point(field_get:MSG.T.bool_required)
  return _internal_bool_required();
}
inline void MSG_T::_internal_set_bool_required(bool value) {
  
  bool_required_ = value;
}
inline void MSG_T::set_bool_required(bool value) {
  _internal_set_bool_required(value);
  // @@protoc_insertion_point(field_set:MSG.T.bool_required)
}

// repeated bool bool_repeated = 3;
inline int MSG_T::_internal_bool_repeated_size() const {
  return bool_repeated_.size();
}
inline int MSG_T::bool_repeated_size() const {
  return _internal_bool_repeated_size();
}
inline void MSG_T::clear_bool_repeated() {
  bool_repeated_.Clear();
}
inline bool MSG_T::_internal_bool_repeated(int index) const {
  return bool_repeated_.Get(index);
}
inline bool MSG_T::bool_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.T.bool_repeated)
  return _internal_bool_repeated(index);
}
inline void MSG_T::set_bool_repeated(int index, bool value) {
  bool_repeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG.T.bool_repeated)
}
inline void MSG_T::_internal_add_bool_repeated(bool value) {
  bool_repeated_.Add(value);
}
inline void MSG_T::add_bool_repeated(bool value) {
  _internal_add_bool_repeated(value);
  // @@protoc_insertion_point(field_add:MSG.T.bool_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
MSG_T::_internal_bool_repeated() const {
  return bool_repeated_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
MSG_T::bool_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.T.bool_repeated)
  return _internal_bool_repeated();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
MSG_T::_internal_mutable_bool_repeated() {
  return &bool_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
MSG_T::mutable_bool_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.T.bool_repeated)
  return _internal_mutable_bool_repeated();
}

// int32 int_optional = 4;
inline void MSG_T::clear_int_optional() {
  int_optional_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_T::_internal_int_optional() const {
  return int_optional_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_T::int_optional() const {
  // @@protoc_insertion_point(field_get:MSG.T.int_optional)
  return _internal_int_optional();
}
inline void MSG_T::_internal_set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int_optional_ = value;
}
inline void MSG_T::set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_optional(value);
  // @@protoc_insertion_point(field_set:MSG.T.int_optional)
}

// int32 int_required = 5;
inline void MSG_T::clear_int_required() {
  int_required_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_T::_internal_int_required() const {
  return int_required_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_T::int_required() const {
  // @@protoc_insertion_point(field_get:MSG.T.int_required)
  return _internal_int_required();
}
inline void MSG_T::_internal_set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int_required_ = value;
}
inline void MSG_T::set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_required(value);
  // @@protoc_insertion_point(field_set:MSG.T.int_required)
}

// repeated int32 int_repeated = 6;
inline int MSG_T::_internal_int_repeated_size() const {
  return int_repeated_.size();
}
inline int MSG_T::int_repeated_size() const {
  return _internal_int_repeated_size();
}
inline void MSG_T::clear_int_repeated() {
  int_repeated_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_T::_internal_int_repeated(int index) const {
  return int_repeated_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_T::int_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.T.int_repeated)
  return _internal_int_repeated(index);
}
inline void MSG_T::set_int_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_repeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG.T.int_repeated)
}
inline void MSG_T::_internal_add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_repeated_.Add(value);
}
inline void MSG_T::add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_int_repeated(value);
  // @@protoc_insertion_point(field_add:MSG.T.int_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MSG_T::_internal_int_repeated() const {
  return int_repeated_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MSG_T::int_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.T.int_repeated)
  return _internal_int_repeated();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MSG_T::_internal_mutable_int_repeated() {
  return &int_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MSG_T::mutable_int_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.T.int_repeated)
  return _internal_mutable_int_repeated();
}

// int64 int64_optional = 7;
inline void MSG_T::clear_int64_optional() {
  int64_optional_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG_T::_internal_int64_optional() const {
  return int64_optional_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG_T::int64_optional() const {
  // @@protoc_insertion_point(field_get:MSG.T.int64_optional)
  return _internal_int64_optional();
}
inline void MSG_T::_internal_set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64_optional_ = value;
}
inline void MSG_T::set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64_optional(value);
  // @@protoc_insertion_point(field_set:MSG.T.int64_optional)
}

// int64 int64_required = 8;
inline void MSG_T::clear_int64_required() {
  int64_required_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG_T::_internal_int64_required() const {
  return int64_required_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG_T::int64_required() const {
  // @@protoc_insertion_point(field_get:MSG.T.int64_required)
  return _internal_int64_required();
}
inline void MSG_T::_internal_set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64_required_ = value;
}
inline void MSG_T::set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64_required(value);
  // @@protoc_insertion_point(field_set:MSG.T.int64_required)
}

// repeated int64 int64_repeated = 9;
inline int MSG_T::_internal_int64_repeated_size() const {
  return int64_repeated_.size();
}
inline int MSG_T::int64_repeated_size() const {
  return _internal_int64_repeated_size();
}
inline void MSG_T::clear_int64_repeated() {
  int64_repeated_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG_T::_internal_int64_repeated(int index) const {
  return int64_repeated_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG_T::int64_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.T.int64_repeated)
  return _internal_int64_repeated(index);
}
inline void MSG_T::set_int64_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  int64_repeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG.T.int64_repeated)
}
inline void MSG_T::_internal_add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value) {
  int64_repeated_.Add(value);
}
inline void MSG_T::add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_int64_repeated(value);
  // @@protoc_insertion_point(field_add:MSG.T.int64_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MSG_T::_internal_int64_repeated() const {
  return int64_repeated_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MSG_T::int64_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.T.int64_repeated)
  return _internal_int64_repeated();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MSG_T::_internal_mutable_int64_repeated() {
  return &int64_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MSG_T::mutable_int64_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.T.int64_repeated)
  return _internal_mutable_int64_repeated();
}

// string string_optional = 10;
inline void MSG_T::clear_string_optional() {
  string_optional_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MSG_T::string_optional() const {
  // @@protoc_insertion_point(field_get:MSG.T.string_optional)
  return _internal_string_optional();
}
inline void MSG_T::set_string_optional(const std::string& value) {
  _internal_set_string_optional(value);
  // @@protoc_insertion_point(field_set:MSG.T.string_optional)
}
inline std::string* MSG_T::mutable_string_optional() {
  // @@protoc_insertion_point(field_mutable:MSG.T.string_optional)
  return _internal_mutable_string_optional();
}
inline const std::string& MSG_T::_internal_string_optional() const {
  return string_optional_.GetNoArena();
}
inline void MSG_T::_internal_set_string_optional(const std::string& value) {
  
  string_optional_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_T::set_string_optional(std::string&& value) {
  
  string_optional_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MSG.T.string_optional)
}
inline void MSG_T::set_string_optional(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  string_optional_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.T.string_optional)
}
inline void MSG_T::set_string_optional(const char* value, size_t size) {
  
  string_optional_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.T.string_optional)
}
inline std::string* MSG_T::_internal_mutable_string_optional() {
  
  return string_optional_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_T::release_string_optional() {
  // @@protoc_insertion_point(field_release:MSG.T.string_optional)
  
  return string_optional_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_T::set_allocated_string_optional(std::string* string_optional) {
  if (string_optional != nullptr) {
    
  } else {
    
  }
  string_optional_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_optional);
  // @@protoc_insertion_point(field_set_allocated:MSG.T.string_optional)
}

// string string_required = 11;
inline void MSG_T::clear_string_required() {
  string_required_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MSG_T::string_required() const {
  // @@protoc_insertion_point(field_get:MSG.T.string_required)
  return _internal_string_required();
}
inline void MSG_T::set_string_required(const std::string& value) {
  _internal_set_string_required(value);
  // @@protoc_insertion_point(field_set:MSG.T.string_required)
}
inline std::string* MSG_T::mutable_string_required() {
  // @@protoc_insertion_point(field_mutable:MSG.T.string_required)
  return _internal_mutable_string_required();
}
inline const std::string& MSG_T::_internal_string_required() const {
  return string_required_.GetNoArena();
}
inline void MSG_T::_internal_set_string_required(const std::string& value) {
  
  string_required_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_T::set_string_required(std::string&& value) {
  
  string_required_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MSG.T.string_required)
}
inline void MSG_T::set_string_required(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  string_required_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.T.string_required)
}
inline void MSG_T::set_string_required(const char* value, size_t size) {
  
  string_required_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.T.string_required)
}
inline std::string* MSG_T::_internal_mutable_string_required() {
  
  return string_required_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_T::release_string_required() {
  // @@protoc_insertion_point(field_release:MSG.T.string_required)
  
  return string_required_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_T::set_allocated_string_required(std::string* string_required) {
  if (string_required != nullptr) {
    
  } else {
    
  }
  string_required_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_required);
  // @@protoc_insertion_point(field_set_allocated:MSG.T.string_required)
}

// repeated string string_repeated = 12;
inline int MSG_T::_internal_string_repeated_size() const {
  return string_repeated_.size();
}
inline int MSG_T::string_repeated_size() const {
  return _internal_string_repeated_size();
}
inline void MSG_T::clear_string_repeated() {
  string_repeated_.Clear();
}
inline std::string* MSG_T::add_string_repeated() {
  // @@protoc_insertion_point(field_add_mutable:MSG.T.string_repeated)
  return _internal_add_string_repeated();
}
inline const std::string& MSG_T::_internal_string_repeated(int index) const {
  return string_repeated_.Get(index);
}
inline const std::string& MSG_T::string_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.T.string_repeated)
  return _internal_string_repeated(index);
}
inline std::string* MSG_T::mutable_string_repeated(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.T.string_repeated)
  return string_repeated_.Mutable(index);
}
inline void MSG_T::set_string_repeated(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:MSG.T.string_repeated)
  string_repeated_.Mutable(index)->assign(value);
}
inline void MSG_T::set_string_repeated(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:MSG.T.string_repeated)
  string_repeated_.Mutable(index)->assign(std::move(value));
}
inline void MSG_T::set_string_repeated(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  string_repeated_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG.T.string_repeated)
}
inline void MSG_T::set_string_repeated(int index, const char* value, size_t size) {
  string_repeated_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG.T.string_repeated)
}
inline std::string* MSG_T::_internal_add_string_repeated() {
  return string_repeated_.Add();
}
inline void MSG_T::add_string_repeated(const std::string& value) {
  string_repeated_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MSG.T.string_repeated)
}
inline void MSG_T::add_string_repeated(std::string&& value) {
  string_repeated_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:MSG.T.string_repeated)
}
inline void MSG_T::add_string_repeated(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  string_repeated_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MSG.T.string_repeated)
}
inline void MSG_T::add_string_repeated(const char* value, size_t size) {
  string_repeated_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MSG.T.string_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG_T::string_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.T.string_repeated)
  return string_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG_T::mutable_string_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.T.string_repeated)
  return &string_repeated_;
}

// -------------------------------------------------------------------

// MSG

// bool bool_optional = 1;
inline void MSG::clear_bool_optional() {
  bool_optional_ = false;
}
inline bool MSG::_internal_bool_optional() const {
  return bool_optional_;
}
inline bool MSG::bool_optional() const {
  // @@protoc_insertion_point(field_get:MSG.bool_optional)
  return _internal_bool_optional();
}
inline void MSG::_internal_set_bool_optional(bool value) {
  
  bool_optional_ = value;
}
inline void MSG::set_bool_optional(bool value) {
  _internal_set_bool_optional(value);
  // @@protoc_insertion_point(field_set:MSG.bool_optional)
}

// bool bool_required = 2;
inline void MSG::clear_bool_required() {
  bool_required_ = false;
}
inline bool MSG::_internal_bool_required() const {
  return bool_required_;
}
inline bool MSG::bool_required() const {
  // @@protoc_insertion_point(field_get:MSG.bool_required)
  return _internal_bool_required();
}
inline void MSG::_internal_set_bool_required(bool value) {
  
  bool_required_ = value;
}
inline void MSG::set_bool_required(bool value) {
  _internal_set_bool_required(value);
  // @@protoc_insertion_point(field_set:MSG.bool_required)
}

// repeated bool bool_repeated = 3;
inline int MSG::_internal_bool_repeated_size() const {
  return bool_repeated_.size();
}
inline int MSG::bool_repeated_size() const {
  return _internal_bool_repeated_size();
}
inline void MSG::clear_bool_repeated() {
  bool_repeated_.Clear();
}
inline bool MSG::_internal_bool_repeated(int index) const {
  return bool_repeated_.Get(index);
}
inline bool MSG::bool_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.bool_repeated)
  return _internal_bool_repeated(index);
}
inline void MSG::set_bool_repeated(int index, bool value) {
  bool_repeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG.bool_repeated)
}
inline void MSG::_internal_add_bool_repeated(bool value) {
  bool_repeated_.Add(value);
}
inline void MSG::add_bool_repeated(bool value) {
  _internal_add_bool_repeated(value);
  // @@protoc_insertion_point(field_add:MSG.bool_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
MSG::_internal_bool_repeated() const {
  return bool_repeated_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
MSG::bool_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.bool_repeated)
  return _internal_bool_repeated();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
MSG::_internal_mutable_bool_repeated() {
  return &bool_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
MSG::mutable_bool_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.bool_repeated)
  return _internal_mutable_bool_repeated();
}

// int32 int_optional = 4;
inline void MSG::clear_int_optional() {
  int_optional_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG::_internal_int_optional() const {
  return int_optional_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG::int_optional() const {
  // @@protoc_insertion_point(field_get:MSG.int_optional)
  return _internal_int_optional();
}
inline void MSG::_internal_set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int_optional_ = value;
}
inline void MSG::set_int_optional(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_optional(value);
  // @@protoc_insertion_point(field_set:MSG.int_optional)
}

// int32 int_required = 5;
inline void MSG::clear_int_required() {
  int_required_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG::_internal_int_required() const {
  return int_required_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG::int_required() const {
  // @@protoc_insertion_point(field_get:MSG.int_required)
  return _internal_int_required();
}
inline void MSG::_internal_set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  int_required_ = value;
}
inline void MSG::set_int_required(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_required(value);
  // @@protoc_insertion_point(field_set:MSG.int_required)
}

// repeated int32 int_repeated = 6;
inline int MSG::_internal_int_repeated_size() const {
  return int_repeated_.size();
}
inline int MSG::int_repeated_size() const {
  return _internal_int_repeated_size();
}
inline void MSG::clear_int_repeated() {
  int_repeated_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG::_internal_int_repeated(int index) const {
  return int_repeated_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG::int_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.int_repeated)
  return _internal_int_repeated(index);
}
inline void MSG::set_int_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_repeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG.int_repeated)
}
inline void MSG::_internal_add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_repeated_.Add(value);
}
inline void MSG::add_int_repeated(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_int_repeated(value);
  // @@protoc_insertion_point(field_add:MSG.int_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MSG::_internal_int_repeated() const {
  return int_repeated_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MSG::int_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.int_repeated)
  return _internal_int_repeated();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MSG::_internal_mutable_int_repeated() {
  return &int_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MSG::mutable_int_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.int_repeated)
  return _internal_mutable_int_repeated();
}

// int64 int64_optional = 7;
inline void MSG::clear_int64_optional() {
  int64_optional_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG::_internal_int64_optional() const {
  return int64_optional_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG::int64_optional() const {
  // @@protoc_insertion_point(field_get:MSG.int64_optional)
  return _internal_int64_optional();
}
inline void MSG::_internal_set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64_optional_ = value;
}
inline void MSG::set_int64_optional(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64_optional(value);
  // @@protoc_insertion_point(field_set:MSG.int64_optional)
}

// int64 int64_required = 8;
inline void MSG::clear_int64_required() {
  int64_required_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG::_internal_int64_required() const {
  return int64_required_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG::int64_required() const {
  // @@protoc_insertion_point(field_get:MSG.int64_required)
  return _internal_int64_required();
}
inline void MSG::_internal_set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  int64_required_ = value;
}
inline void MSG::set_int64_required(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64_required(value);
  // @@protoc_insertion_point(field_set:MSG.int64_required)
}

// repeated int64 int64_repeated = 9;
inline int MSG::_internal_int64_repeated_size() const {
  return int64_repeated_.size();
}
inline int MSG::int64_repeated_size() const {
  return _internal_int64_repeated_size();
}
inline void MSG::clear_int64_repeated() {
  int64_repeated_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG::_internal_int64_repeated(int index) const {
  return int64_repeated_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MSG::int64_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.int64_repeated)
  return _internal_int64_repeated(index);
}
inline void MSG::set_int64_repeated(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  int64_repeated_.Set(index, value);
  // @@protoc_insertion_point(field_set:MSG.int64_repeated)
}
inline void MSG::_internal_add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value) {
  int64_repeated_.Add(value);
}
inline void MSG::add_int64_repeated(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_int64_repeated(value);
  // @@protoc_insertion_point(field_add:MSG.int64_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MSG::_internal_int64_repeated() const {
  return int64_repeated_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MSG::int64_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.int64_repeated)
  return _internal_int64_repeated();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MSG::_internal_mutable_int64_repeated() {
  return &int64_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MSG::mutable_int64_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.int64_repeated)
  return _internal_mutable_int64_repeated();
}

// string string_optional = 10;
inline void MSG::clear_string_optional() {
  string_optional_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MSG::string_optional() const {
  // @@protoc_insertion_point(field_get:MSG.string_optional)
  return _internal_string_optional();
}
inline void MSG::set_string_optional(const std::string& value) {
  _internal_set_string_optional(value);
  // @@protoc_insertion_point(field_set:MSG.string_optional)
}
inline std::string* MSG::mutable_string_optional() {
  // @@protoc_insertion_point(field_mutable:MSG.string_optional)
  return _internal_mutable_string_optional();
}
inline const std::string& MSG::_internal_string_optional() const {
  return string_optional_.GetNoArena();
}
inline void MSG::_internal_set_string_optional(const std::string& value) {
  
  string_optional_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG::set_string_optional(std::string&& value) {
  
  string_optional_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MSG.string_optional)
}
inline void MSG::set_string_optional(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  string_optional_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.string_optional)
}
inline void MSG::set_string_optional(const char* value, size_t size) {
  
  string_optional_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.string_optional)
}
inline std::string* MSG::_internal_mutable_string_optional() {
  
  return string_optional_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG::release_string_optional() {
  // @@protoc_insertion_point(field_release:MSG.string_optional)
  
  return string_optional_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG::set_allocated_string_optional(std::string* string_optional) {
  if (string_optional != nullptr) {
    
  } else {
    
  }
  string_optional_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_optional);
  // @@protoc_insertion_point(field_set_allocated:MSG.string_optional)
}

// string string_required = 11;
inline void MSG::clear_string_required() {
  string_required_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MSG::string_required() const {
  // @@protoc_insertion_point(field_get:MSG.string_required)
  return _internal_string_required();
}
inline void MSG::set_string_required(const std::string& value) {
  _internal_set_string_required(value);
  // @@protoc_insertion_point(field_set:MSG.string_required)
}
inline std::string* MSG::mutable_string_required() {
  // @@protoc_insertion_point(field_mutable:MSG.string_required)
  return _internal_mutable_string_required();
}
inline const std::string& MSG::_internal_string_required() const {
  return string_required_.GetNoArena();
}
inline void MSG::_internal_set_string_required(const std::string& value) {
  
  string_required_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG::set_string_required(std::string&& value) {
  
  string_required_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MSG.string_required)
}
inline void MSG::set_string_required(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  string_required_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MSG.string_required)
}
inline void MSG::set_string_required(const char* value, size_t size) {
  
  string_required_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MSG.string_required)
}
inline std::string* MSG::_internal_mutable_string_required() {
  
  return string_required_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG::release_string_required() {
  // @@protoc_insertion_point(field_release:MSG.string_required)
  
  return string_required_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG::set_allocated_string_required(std::string* string_required) {
  if (string_required != nullptr) {
    
  } else {
    
  }
  string_required_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_required);
  // @@protoc_insertion_point(field_set_allocated:MSG.string_required)
}

// repeated string string_repeated = 12;
inline int MSG::_internal_string_repeated_size() const {
  return string_repeated_.size();
}
inline int MSG::string_repeated_size() const {
  return _internal_string_repeated_size();
}
inline void MSG::clear_string_repeated() {
  string_repeated_.Clear();
}
inline std::string* MSG::add_string_repeated() {
  // @@protoc_insertion_point(field_add_mutable:MSG.string_repeated)
  return _internal_add_string_repeated();
}
inline const std::string& MSG::_internal_string_repeated(int index) const {
  return string_repeated_.Get(index);
}
inline const std::string& MSG::string_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.string_repeated)
  return _internal_string_repeated(index);
}
inline std::string* MSG::mutable_string_repeated(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.string_repeated)
  return string_repeated_.Mutable(index);
}
inline void MSG::set_string_repeated(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:MSG.string_repeated)
  string_repeated_.Mutable(index)->assign(value);
}
inline void MSG::set_string_repeated(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:MSG.string_repeated)
  string_repeated_.Mutable(index)->assign(std::move(value));
}
inline void MSG::set_string_repeated(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  string_repeated_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MSG.string_repeated)
}
inline void MSG::set_string_repeated(int index, const char* value, size_t size) {
  string_repeated_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MSG.string_repeated)
}
inline std::string* MSG::_internal_add_string_repeated() {
  return string_repeated_.Add();
}
inline void MSG::add_string_repeated(const std::string& value) {
  string_repeated_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MSG.string_repeated)
}
inline void MSG::add_string_repeated(std::string&& value) {
  string_repeated_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:MSG.string_repeated)
}
inline void MSG::add_string_repeated(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  string_repeated_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MSG.string_repeated)
}
inline void MSG::add_string_repeated(const char* value, size_t size) {
  string_repeated_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MSG.string_repeated)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG::string_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.string_repeated)
  return string_repeated_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG::mutable_string_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.string_repeated)
  return &string_repeated_;
}

// .MSG.T T_optional = 13;
inline bool MSG::_internal_has_t_optional() const {
  return this != internal_default_instance() && t_optional_ != nullptr;
}
inline bool MSG::has_t_optional() const {
  return _internal_has_t_optional();
}
inline void MSG::clear_t_optional() {
  if (GetArenaNoVirtual() == nullptr && t_optional_ != nullptr) {
    delete t_optional_;
  }
  t_optional_ = nullptr;
}
inline const ::MSG_T& MSG::_internal_t_optional() const {
  const ::MSG_T* p = t_optional_;
  return p != nullptr ? *p : *reinterpret_cast<const ::MSG_T*>(
      &::_MSG_T_default_instance_);
}
inline const ::MSG_T& MSG::t_optional() const {
  // @@protoc_insertion_point(field_get:MSG.T_optional)
  return _internal_t_optional();
}
inline ::MSG_T* MSG::release_t_optional() {
  // @@protoc_insertion_point(field_release:MSG.T_optional)
  
  ::MSG_T* temp = t_optional_;
  t_optional_ = nullptr;
  return temp;
}
inline ::MSG_T* MSG::_internal_mutable_t_optional() {
  
  if (t_optional_ == nullptr) {
    auto* p = CreateMaybeMessage<::MSG_T>(GetArenaNoVirtual());
    t_optional_ = p;
  }
  return t_optional_;
}
inline ::MSG_T* MSG::mutable_t_optional() {
  // @@protoc_insertion_point(field_mutable:MSG.T_optional)
  return _internal_mutable_t_optional();
}
inline void MSG::set_allocated_t_optional(::MSG_T* t_optional) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete t_optional_;
  }
  if (t_optional) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      t_optional = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, t_optional, submessage_arena);
    }
    
  } else {
    
  }
  t_optional_ = t_optional;
  // @@protoc_insertion_point(field_set_allocated:MSG.T_optional)
}

// .MSG.T T_required = 14;
inline bool MSG::_internal_has_t_required() const {
  return this != internal_default_instance() && t_required_ != nullptr;
}
inline bool MSG::has_t_required() const {
  return _internal_has_t_required();
}
inline void MSG::clear_t_required() {
  if (GetArenaNoVirtual() == nullptr && t_required_ != nullptr) {
    delete t_required_;
  }
  t_required_ = nullptr;
}
inline const ::MSG_T& MSG::_internal_t_required() const {
  const ::MSG_T* p = t_required_;
  return p != nullptr ? *p : *reinterpret_cast<const ::MSG_T*>(
      &::_MSG_T_default_instance_);
}
inline const ::MSG_T& MSG::t_required() const {
  // @@protoc_insertion_point(field_get:MSG.T_required)
  return _internal_t_required();
}
inline ::MSG_T* MSG::release_t_required() {
  // @@protoc_insertion_point(field_release:MSG.T_required)
  
  ::MSG_T* temp = t_required_;
  t_required_ = nullptr;
  return temp;
}
inline ::MSG_T* MSG::_internal_mutable_t_required() {
  
  if (t_required_ == nullptr) {
    auto* p = CreateMaybeMessage<::MSG_T>(GetArenaNoVirtual());
    t_required_ = p;
  }
  return t_required_;
}
inline ::MSG_T* MSG::mutable_t_required() {
  // @@protoc_insertion_point(field_mutable:MSG.T_required)
  return _internal_mutable_t_required();
}
inline void MSG::set_allocated_t_required(::MSG_T* t_required) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete t_required_;
  }
  if (t_required) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      t_required = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, t_required, submessage_arena);
    }
    
  } else {
    
  }
  t_required_ = t_required;
  // @@protoc_insertion_point(field_set_allocated:MSG.T_required)
}

// repeated .MSG.T T_repeated = 15;
inline int MSG::_internal_t_repeated_size() const {
  return t_repeated_.size();
}
inline int MSG::t_repeated_size() const {
  return _internal_t_repeated_size();
}
inline void MSG::clear_t_repeated() {
  t_repeated_.Clear();
}
inline ::MSG_T* MSG::mutable_t_repeated(int index) {
  // @@protoc_insertion_point(field_mutable:MSG.T_repeated)
  return t_repeated_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MSG_T >*
MSG::mutable_t_repeated() {
  // @@protoc_insertion_point(field_mutable_list:MSG.T_repeated)
  return &t_repeated_;
}
inline const ::MSG_T& MSG::_internal_t_repeated(int index) const {
  return t_repeated_.Get(index);
}
inline const ::MSG_T& MSG::t_repeated(int index) const {
  // @@protoc_insertion_point(field_get:MSG.T_repeated)
  return _internal_t_repeated(index);
}
inline ::MSG_T* MSG::_internal_add_t_repeated() {
  return t_repeated_.Add();
}
inline ::MSG_T* MSG::add_t_repeated() {
  // @@protoc_insertion_point(field_add:MSG.T_repeated)
  return _internal_add_t_repeated();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MSG_T >&
MSG::t_repeated() const {
  // @@protoc_insertion_point(field_list:MSG.T_repeated)
  return t_repeated_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_msg_2eproto
